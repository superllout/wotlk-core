== DO NOT ADD SPECIFIC QUESTS OR SIMILAR INGAME CONTENT

== CHANGES ARE TAGGED FOR 4.1 release (sanctum32: NO MORE EDITS)
=== minor releases will get prefix increase after every feature implementation (for example: 4.0.x, 4.0.1 and etc)

* Random dungeon finder

* Random battleground

* Warden anticheat cheacks (port it from trinitycore)

* Packet proof checks

* Transport system

* Refer a friend

* Character faction change

* Character class change (low priority)

* Char recovery (port it from mangos)

* Outdoor PvP (add wrapper and outdoor pvp data saving to characters database + reset times).

* Game event system - event spawn data should be exluded from original spawns)

* Creature difficulty stats

* Weekly quests

* Monthly quests

* Ingame loterry (its blizzlike thing, for e.x NPC Ian Drake)

* Force quests data to use dbc reputation values instead of custom (also create additional quest_rewards table for custom value - we should allow customizing it!)

* Remove worldmap_info tables generally and force to use dbc values.

* Split characters table

* Force logon to use sha1 password.

* Make expansion option in account table more understandible by using expansion numbers (0 - classic, 1 - tbc, 2 - wotlk and etc)

* Make gm levels option to number instead of string flag (az and similar).

* Port TrinityCore mmaps system.

* Script all battlegrounds - 30%.

* Remove additional tables load - for customization there will created external tables with prefix custom_*

* Force all system ingame messages to use worldstring table data - it will improve multilanguage support

* Implement achievement_reward_mail table which will hold letters data with additional locales cells. - 100%.

* Implement creature_script_texts (data load is implemented), gossip_options_texts data usage.

* Implement spell_linked_spell table - will used for simple spells (port of trinitycore based implementation.

* Add condition cells in npc_spellclick_spell table.

* Implement achievements_criteria_requirements table to handle achievements criteria (port from mangos).

* Port trinitycore based disable system.

* Implement spell event scripts (OnCast, OnFail, OnHitTarget and etc) - similar to TrinityCore based.

* To prevent sql injection - start using prepared sql statement.

* Rework all player classes and pets spells - it should be done 100% like official.

* Remove possible hack code, magic numbers.

* Add debug information to every packet.

* Add info to database data load functions - 70% complete.

* Map, dbc, vmap extractors should get external class functions wrappers - its not good in code style to contain single functions for big apps in following row.

* Crashdumps should create text crashdump about crash (it would make possible to make mingw support) and move MSVC debug construction in this library.

* Add proper mingw, clang, intel compilers support - important.

* Move cmake to top folders (that would add great support for lower popularity UNIX IDES like anjuta) - low priority

* Dependencies should be updated directly by using git submodule from their official repositories + additionally adding custom cmake for them if they don't have) - low priority

* Add SOAP support

* Remove compiler options for very outdated compilers.

* Remove unused or unlogical config options

* Implement spell area table which will used for spell casting on zones - Done (by aaron2)

* Rework on playercreateinfo data - use class and race cells instead of index

* All queries should use proper collumn names

* Update npc_gossip to npc_gossipmenu which will contain text entries for other gossip menu options

* Reduce memory usage on data loads (optionable).